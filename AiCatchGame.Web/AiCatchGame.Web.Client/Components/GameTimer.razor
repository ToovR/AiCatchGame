@Value
@code {
    [Parameter] public int Value { get; set; }
    [Parameter] public EventCallback<int> ValueChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        System.Threading.Timer timer = new System.Threading.Timer(async _ =>  // async void
        {
            if (Value > 0)
            {
                Value--;
            }
            // we need StateHasChanged() because this is an async void handler
            // we need to Invoke it because we could be on the wrong Thread
            await InvokeAsync(StateHasChanged);
        }, null, 0, 1000);

    }
}
